/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --leading-tight: 1.25;
    --radius-lg: 0.5rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --container-width-in-figma: 1280px;
    --container-side-padding: 16px;
    --container-max-width: calc(
		var(--container-width-in-figma) + 2 * var(--container-side-padding)
	);
    --font-dm_sans: "DM Sans", sans-serif;
    --font-space_grotesk: "Space Grotesk", sans-serif;
    --color-primary-10: #19141f;
    --color-primary-20: #251f2e;
    --color-primary-40: #6317cf;
    --color-primary-50: #6c0df2;
    --color-primary-60: #8833ff;
    --color-primary-70: #9966ff;
    --color-primary-80: #bb99ff;
    --color-primary-90: #ddcdfe;
    --color-primary-95: #f1ebff;
    --color-secondary-50: #ff5500;
    --color-tertiary-40: #14b89c;
    --color-grey-10: #1a1a1a;
    --color-grey-20: #333333;
    --color-grey-30: #4d4d4d;
    --color-grey-40: #666666;
    --color-grey-50: #808080;
    --color-grey-60: #999999;
    --color-grey-70: #b2b2b2;
    --color-grey-80: #cccccc;
    --color-grey-90: #e5e5e5;
    --color-grey-95: #f2f2f2;
    --color-error: #df064f;
    --gradient-white: 180deg, rgba(255, 255, 255, 0) 0%, #fff 75%;
    --animate-fadeIn: fadeIn 0.3s ease-out;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-20 {
    top: calc(var(--spacing) * 20);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-2 {
    bottom: calc(var(--spacing) * 2);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-2 {
    left: calc(var(--spacing) * 2);
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .z-\[2\] {
    z-index: 2;
  }
  .z-\[3\] {
    z-index: 3;
  }
  .z-\[4\] {
    z-index: 4;
  }
  .z-\[5\] {
    z-index: 5;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .container {
    margin-inline: auto;
    max-width: var(--container-max-width);
    padding-inline: var(--container-side-padding);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .ml-auto {
    margin-left: auto;
  }
  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-12 {
    width: calc(var(--spacing) * 12);
    height: calc(var(--spacing) * 12);
  }
  .size-\[200px\] {
    width: 200px;
    height: 200px;
  }
  .h-\[52px\] {
    height: 52px;
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .max-h-\[114px\] {
    max-height: 114px;
  }
  .min-h-\[100px\] {
    min-height: 100px;
  }
  .min-h-full {
    min-height: 100%;
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-\[73px\] {
    width: 73px;
  }
  .w-\[271px\] {
    width: 271px;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[476px\] {
    max-width: 476px;
  }
  .max-w-\[698px\] {
    max-width: 698px;
  }
  .max-w-fit {
    max-width: fit-content;
  }
  .min-w-\[144px\] {
    min-width: 144px;
  }
  .min-w-\[480px\] {
    min-width: 480px;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-auto {
    flex: auto;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-fadeIn {
    animation: var(--animate-fadeIn);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .grid-cols-\[1fr_auto_1fr\] {
    grid-template-columns: 1fr auto 1fr;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .-space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-l-\[8px\] {
    border-left-style: var(--tw-border-style);
    border-left-width: 8px;
  }
  .border-\[\#367D7D\] {
    border-color: #367D7D;
  }
  .border-grey-70 {
    border-color: var(--color-grey-70);
  }
  .border-grey-95 {
    border-color: var(--color-grey-95);
  }
  .border-primary-20 {
    border-color: var(--color-primary-20);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-r-grey-70 {
    border-right-color: var(--color-grey-70);
  }
  .border-l-grey-70 {
    border-left-color: var(--color-grey-70);
  }
  .bg-\[\#367D7D\] {
    background-color: #367D7D;
  }
  .bg-\[\#BED0F4\] {
    background-color: #BED0F4;
  }
  .bg-\[\#BF4095\] {
    background-color: #BF4095;
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/80 {
    background-color: color-mix(in srgb, #000 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
  }
  .bg-grey-10 {
    background-color: var(--color-grey-10);
  }
  .bg-grey-95 {
    background-color: var(--color-grey-95);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .fill-current {
    fill: currentcolor;
  }
  .fill-grey-20 {
    fill: var(--color-grey-20);
  }
  .fill-grey-30 {
    fill: var(--color-grey-30);
  }
  .fill-grey-50 {
    fill: var(--color-grey-50);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-2\.5 {
    padding: calc(var(--spacing) * 2.5);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .py-0 {
    padding-block: calc(var(--spacing) * 0);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pb-10 {
    padding-bottom: calc(var(--spacing) * 10);
  }
  .pb-\[120px\] {
    padding-bottom: 120px;
  }
  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[10px\] {
    font-size: 10px;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .break-all {
    word-break: break-all;
  }
  .text-grey-30 {
    color: var(--color-grey-30);
  }
  .text-grey-40 {
    color: var(--color-grey-40);
  }
  .text-grey-50 {
    color: var(--color-grey-50);
  }
  .text-transparent {
    color: transparent;
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .underline-offset-2 {
    text-underline-offset: 2px;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow-header {
    --tw-shadow: 0px 1px 2px 0px var(--tw-shadow-color, rgba(0, 0, 0, 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .peer-checked\:block {
    &:is(:where(.peer):checked ~ *) {
      display: block;
    }
  }
  .peer-checked\:opacity-50 {
    &:is(:where(.peer):checked ~ *) {
      opacity: 50%;
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:-top-8 {
    &::after {
      content: var(--tw-content);
      top: calc(var(--spacing) * -8);
    }
  }
  .after\:h-8 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 8);
    }
  }
  .after\:w-full {
    &::after {
      content: var(--tw-content);
      width: 100%;
    }
  }
  .after\:bg-linear-\(--gradient-white\) {
    &::after {
      content: var(--tw-content);
      --tw-gradient-position: var(--gradient-white);
      background-image: linear-gradient(var(--tw-gradient-stops,var(--gradient-white)));
    }
  }
  .last\:border-r-0 {
    &:last-child {
      border-right-style: var(--tw-border-style);
      border-right-width: 0px;
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:text-primary-40 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary-40);
      }
    }
  }
  .min-\[420px\]\:grid-cols-3 {
    @media (width >= 420px) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:w-fit {
    @media (width >= 48rem) {
      width: fit-content;
    }
  }
  .md\:w-full {
    @media (width >= 48rem) {
      width: 100%;
    }
  }
  .md\:max-w-\[200px\] {
    @media (width >= 48rem) {
      max-width: 200px;
    }
  }
  .md\:min-w-\[130px\] {
    @media (width >= 48rem) {
      min-width: 130px;
    }
  }
  .md\:flex-col {
    @media (width >= 48rem) {
      flex-direction: column;
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:gap-0 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 0);
    }
  }
  .md\:gap-3 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 3);
    }
  }
  .md\:border-r-0 {
    @media (width >= 48rem) {
      border-right-style: var(--tw-border-style);
      border-right-width: 0px;
    }
  }
  .md\:p-4 {
    @media (width >= 48rem) {
      padding: calc(var(--spacing) * 4);
    }
  }
  .md\:px-2 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .md\:pr-0 {
    @media (width >= 48rem) {
      padding-right: calc(var(--spacing) * 0);
    }
  }
  .lg\:mt-6 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 6);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:size-16 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 16);
      height: calc(var(--spacing) * 16);
    }
  }
  .lg\:w-\[224px\] {
    @media (width >= 64rem) {
      width: 224px;
    }
  }
  .lg\:max-w-\[694px\] {
    @media (width >= 64rem) {
      max-width: 694px;
    }
  }
  .lg\:flex-col {
    @media (width >= 64rem) {
      flex-direction: column;
    }
  }
  .lg\:items-center {
    @media (width >= 64rem) {
      align-items: center;
    }
  }
  .lg\:justify-between {
    @media (width >= 64rem) {
      justify-content: space-between;
    }
  }
  .lg\:gap-4 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .lg\:gap-6 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .lg\:space-y-4 {
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .lg\:space-y-5 {
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .lg\:space-y-6 {
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .lg\:p-6 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 6);
    }
  }
  .lg\:px-10 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .lg\:pb-10 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 10);
    }
  }
  .lg\:text-xl {
    @media (width >= 64rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .xl\:min-w-\[580px\] {
    @media (width >= 80rem) {
      min-width: 580px;
    }
  }
  .dark\:border-grey-30 {
    &:where(.dark, .dark *) {
      border-color: var(--color-grey-30);
    }
  }
  .dark\:border-white {
    &:where(.dark, .dark *) {
      border-color: var(--color-white);
    }
  }
  .dark\:bg-primary-10 {
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-10);
    }
  }
  .dark\:bg-primary-20 {
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-20);
    }
  }
  .dark\:bg-primary-90 {
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-90);
    }
  }
  .dark\:fill-grey-80 {
    &:where(.dark, .dark *) {
      fill: var(--color-grey-80);
    }
  }
  .dark\:fill-white {
    &:where(.dark, .dark *) {
      fill: var(--color-white);
    }
  }
  .dark\:text-\[\#B7B6B8\] {
    &:where(.dark, .dark *) {
      color: #B7B6B8;
    }
  }
  .dark\:text-grey-70 {
    &:where(.dark, .dark *) {
      color: var(--color-grey-70);
    }
  }
  .dark\:text-grey-80 {
    &:where(.dark, .dark *) {
      color: var(--color-grey-80);
    }
  }
  .dark\:text-grey-95 {
    &:where(.dark, .dark *) {
      color: var(--color-grey-95);
    }
  }
  .dark\:text-primary-40 {
    &:where(.dark, .dark *) {
      color: var(--color-primary-40);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:peer-checked\:fill-white {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):checked ~ *) {
        fill: var(--color-white);
      }
    }
  }
  .dark\:after\:hidden {
    &:where(.dark, .dark *) {
      &::after {
        content: var(--tw-content);
        display: none;
      }
    }
  }
  .dark\:after\:bg-linear-\(--gradient-dark\) {
    &:where(.dark, .dark *) {
      &::after {
        content: var(--tw-content);
        --tw-gradient-position: var(--gradient-dark);
        background-image: linear-gradient(var(--tw-gradient-stops,var(--gradient-dark)));
      }
    }
  }
  .dark\:hover\:bg-\[\#3E334D\] {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: #3E334D;
        }
      }
    }
  }
  .dark\:hover\:text-primary-60 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-primary-60);
        }
      }
    }
  }
  .dark\:hover\:text-primary-70 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-primary-70);
        }
      }
    }
  }
  .\[\.is-open\]\:visible {
    &:is(.is-open) {
      visibility: visible;
    }
  }
  .\[\.is-open\]\:opacity-100 {
    &:is(.is-open) {
      opacity: 100%;
    }
  }
}
@layer base {
  body {
    font-family: var(--font-dm_sans);
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-10);
    }
  }
  button {
    cursor: pointer;
  }
  h1 {
    font-family: var(--font-space_grotesk);
    font-size: 32px;
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-grey-20);
    @media (width >= 64rem) {
      font-size: 40px;
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  h2 {
    font-family: var(--font-space_grotesk);
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-grey-20);
    @media (width >= 64rem) {
      font-size: 32px;
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  h3 {
    font-family: var(--font-space_grotesk);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-grey-20);
    @media (width >= 64rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  h4 {
    font-family: var(--font-space_grotesk);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-grey-20);
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  p {
    color: var(--color-grey-20);
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
}
@layer components {
  .notification {
    position: absolute;
    top: calc(var(--spacing) * -1);
    right: calc(var(--spacing) * -1);
    display: flex;
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
    align-items: center;
    justify-content: center;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-white);
    background-color: var(--color-secondary-50);
    font-size: 8px;
    --tw-leading: 1;
    line-height: 1;
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-white);
  }
  .notification-bottom {
    position: absolute;
    right: calc(var(--spacing) * -1);
    bottom: calc(var(--spacing) * -1);
    display: flex;
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
    align-items: center;
    justify-content: center;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-white);
    background-color: var(--color-grey-30);
    font-size: 8px;
    --tw-leading: 1;
    line-height: 1;
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-white);
  }
  .menu-link {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    padding: calc(var(--spacing) * 2);
    color: var(--color-grey-20);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-95);
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-grey-70);
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-primary-20);
        }
      }
    }
    &:where(.dark, .dark *) {
      & path {
        fill: var(--color-grey-70);
      }
    }
    &:is(.active) {
      background-color: var(--color-primary-95);
    }
    &:is(.active) {
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
    }
    &:is(.active) {
      color: var(--color-primary-40);
    }
    &:where(.dark, .dark *) {
      &:is(.active) {
        background-color: #3E334D;
      }
    }
    &:is(.active) {
      &:where(.dark, .dark *) {
        color: var(--color-white);
      }
    }
    &:is(.active) {
      & path {
        fill: var(--color-primary-40) !important;
      }
    }
    &:is(.active) {
      &:where(.dark, .dark *) {
        & path {
          fill: var(--color-white) !important;
        }
      }
    }
  }
  .mobile-menu-link {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    padding: calc(var(--spacing) * 2);
    color: var(--color-grey-20);
    &:where(.dark, .dark *) {
      color: var(--color-grey-70);
    }
    &:where(.dark, .dark *) {
      & path {
        fill: var(--color-grey-70);
      }
    }
    &:is(.active) {
      background-color: var(--color-primary-95);
    }
    &:is(.active) {
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
    }
    &:is(.active) {
      color: var(--color-primary-40);
    }
    &:where(.dark, .dark *) {
      &:is(.active) {
        background-color: #3E334D;
      }
    }
    &:is(.active) {
      &:where(.dark, .dark *) {
        color: var(--color-white);
      }
    }
    &:is(.active) {
      & path {
        fill: var(--color-primary-40) !important;
      }
    }
    &:is(.active) {
      &:where(.dark, .dark *) {
        & path {
          fill: var(--color-white) !important;
        }
      }
    }
  }
  .search-input-container {
    display: flex;
    width: 100%;
    align-items: center;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-grey-70);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:focus-within {
      border-color: var(--color-primary-40);
    }
    &:where(.dark, .dark *) {
      &:focus-within {
        border-color: #A68CD9;
      }
    }
    &:is(.active) {
      border-top-left-radius: var(--radius-3xl);
      border-top-right-radius: var(--radius-3xl);
    }
    &:is(.active) {
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;
    }
    &:is(.active) {
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
    &:is(.active) {
      border-color: var(--color-primary-40);
    }
    &:is(.active) {
      border-bottom-color: transparent;
    }
    &:where(.dark, .dark *) {
      &:is(.active) {
        border-color: #A68CD9;
      }
    }
  }
  .add-participants-input-container {
    border-radius: var(--radius-lg);
    padding-block: calc(var(--spacing) * 4);
    &:is(.active) {
      border-radius: var(--radius-lg);
    }
  }
  .add-participants-input {
    &:not(*:disabled) {
      &::placeholder {
        color: var(--color-grey-70);
      }
    }
  }
  .add-participants-dropdown {
    border-bottom-right-radius: var(--radius-lg) !important;
    border-bottom-left-radius: var(--radius-lg) !important;
  }
  .search-input {
    display: flex;
    width: 100%;
    padding-left: calc(var(--spacing) * 4);
    color: var(--color-grey-20);
    --tw-outline-style: none;
    outline-style: none;
    &::placeholder {
      color: var(--color-grey-40);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .search-dropdown {
    position: absolute;
    top: 100%;
    right: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    z-index: 10;
    margin-top: calc(2px * -1);
    width: 100%;
    overflow: hidden;
    border-bottom-right-radius: var(--radius-3xl);
    border-bottom-left-radius: var(--radius-3xl);
    border-style: var(--tw-border-style);
    border-width: 2px;
    border-top-style: var(--tw-border-style);
    border-top-width: 0px;
    border-color: var(--color-primary-40);
    background-color: var(--color-white);
    padding-bottom: calc(var(--spacing) * 2);
    &:where(.dark, .dark *) {
      border-color: #A68CD9;
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-10);
    }
  }
  .search-result-item {
    cursor: pointer;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: #3E334D;
        }
      }
    }
  }
  .breadcrumbs-item {
    display: flex;
    align-items: center;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    &:last-child {
      &:hover {
        @media (hover: hover) {
          color: currentcolor;
        }
      }
    }
    &:last-child {
      & a {
        cursor: default;
      }
    }
    &:last-child {
      & a {
        &:hover {
          @media (hover: hover) {
            color: var(--color-grey-30) !important;
          }
        }
      }
    }
    &:where(.dark, .dark *) {
      &:last-child {
        & a {
          &:hover {
            @media (hover: hover) {
              color: var(--color-grey-70) !important;
            }
          }
        }
      }
    }
    & svg {
      margin-inline: calc(var(--spacing) * 2);
    }
    & svg {
      flex-shrink: 0;
    }
    &:last-child {
      & svg {
        display: none !important;
      }
    }
  }
  .breadcrumbs-link {
    color: var(--color-grey-30);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:hover {
      @media (hover: hover) {
        color: var(--color-grey-10);
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-grey-70);
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-grey-95);
        }
      }
    }
  }
  .btn {
    display: inline-flex;
    align-items: center;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    font-family: var(--font-dm_sans);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    text-decoration-line: underline;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:disabled {
      cursor: not-allowed;
    }
    &:disabled {
      opacity: 85%;
    }
    & path {
      fill: currentcolor;
    }
    & span {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .btn-primary {
    border-color: var(--color-primary-40);
    background-color: var(--color-primary-40);
    color: var(--color-white);
    text-underline-offset: 2px;
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 4px 8px 4px var(--tw-shadow-color, rgba(0, 0, 0, 0.15));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
    &:not(*:disabled) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-primary-40);
        }
      }
    }
    &:not(*:disabled) {
      &:active {
        background-color: var(--color-primary-50);
      }
    }
    &:where(.dark, .dark *) {
      border-color: var(--color-primary-90);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-90);
    }
    &:where(.dark, .dark *) {
      color: var(--color-primary-20);
    }
    &:where(.dark, .dark *) {
      &:not(*:disabled) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-primary-80);
          }
        }
      }
    }
    &:where(.dark, .dark *) {
      &:not(*:disabled) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-primary-80);
          }
        }
      }
    }
  }
  .btn-secondary {
    border-color: var(--color-grey-30);
    background-color: var(--color-white);
    color: var(--color-grey-20);
    text-underline-offset: 2px;
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 4px 8px 4px var(--tw-shadow-color, rgba(0, 0, 0, 0.15));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
    &:not(*:disabled) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-grey-95);
        }
      }
    }
    &:not(*:disabled) {
      &:active {
        background-color: var(--color-grey-90);
      }
    }
    &:where(.dark, .dark *) {
      border-color: var(--color-grey-70);
    }
    &:where(.dark, .dark *) {
      background-color: transparent;
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #251f2e 50%, transparent) !important;
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary-20) 50%, transparent) !important;
          }
        }
      }
    }
  }
  .btn-text {
    --tw-border-style: none;
    border-style: none;
    background-color: transparent;
    padding: calc(var(--spacing) * 1);
    color: var(--color-grey-20);
    text-underline-offset: 2px;
    &:not(*:disabled) {
      &:hover {
        @media (hover: hover) {
          background-color: transparent;
        }
      }
    }
    &:not(*:disabled) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-primary-40);
        }
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-grey-70);
    }
    &:where(.dark, .dark *) {
      &:not(*:disabled) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary-90);
          }
        }
      }
    }
  }
  .checkbox-group-item {
    display: flex;
    min-height: 34px;
    width: 100%;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-grey-20);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 2);
    text-align: center;
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-grey-20);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:is(:where(.peer):checked ~ *) {
      border-color: var(--color-primary-40);
    }
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-primary-40);
    }
    &:is(:where(.peer):checked ~ *) {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
    &:is(:where(.peer):checked ~ *) {
      color: var(--color-white);
    }
    &:is(:where(.peer):disabled ~ *) {
      cursor: not-allowed;
    }
    &:is(:where(.peer):disabled ~ *) {
      border-color: var(--color-grey-60);
    }
    &:is(:where(.peer):disabled ~ *) {
      background-color: var(--color-white);
    }
    &:is(:where(.peer):disabled ~ *) {
      color: var(--color-grey-60);
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-grey-95);
      }
    }
    &:is(:where(.peer):checked ~ *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-primary-40);
        }
      }
    }
    &:is(:where(.peer):disabled ~ *) {
      &:hover {
        @media (hover: hover) {
          background-color: transparent;
        }
      }
    }
    @media (width >= 420px) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    &:where(.dark, .dark *) {
      border-color: var(--color-grey-70);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-20);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      &:is(:where(.peer):checked ~ *) {
        border-color: var(--color-primary-90);
      }
    }
    &:where(.dark, .dark *) {
      &:is(:where(.peer):checked ~ *) {
        background-color: var(--color-primary-90);
      }
    }
    &:where(.dark, .dark *) {
      &:is(:where(.peer):checked ~ *) {
        color: var(--color-primary-20);
      }
    }
    &:where(.dark, .dark *) {
      &:is(:where(.peer):disabled ~ *) {
        border-color: var(--color-grey-30);
      }
    }
    &:where(.dark, .dark *) {
      &:is(:where(.peer):disabled ~ *) {
        background-color: transparent;
      }
    }
    &:where(.dark, .dark *) {
      &:is(:where(.peer):disabled ~ *) {
        color: var(--color-grey-60);
      }
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #251f2e 50%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary-20) 50%, transparent);
          }
        }
      }
    }
    &:where(.dark, .dark *) {
      &:is(:where(.peer):checked ~ *) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-primary-90);
          }
        }
      }
    }
  }
  .event-details-info {
    margin-block: calc(var(--spacing) * 2);
    border-radius: 0.25rem;
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
    border-left-color: var(--color-secondary-50);
    padding-inline: calc(var(--spacing) * 2);
    &.border-aqua {
      border-color: var(--color-tertiary-40);
    }
  }
  .input {
    display: flex;
    width: 100%;
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-grey-70);
    padding: calc(var(--spacing) * 4);
    color: var(--color-grey-20);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:is(:where(.group\/label):is(.invalid) *) {
      border-color: var(--color-error);
    }
    &:is(:where(.group\/label):is(.valid) *) {
      border-color: var(--color-green-600);
    }
    &:not(*:disabled) {
      &::placeholder {
        color: var(--color-grey-70);
      }
    }
    &:not(*:disabled) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-primary-40);
        }
      }
    }
    &:focus {
      outline-color: var(--color-primary-40);
    }
    &:not(*:disabled) {
      &:focus {
        border-color: var(--color-primary-40);
      }
    }
    &:disabled {
      cursor: not-allowed;
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      --tw-outline-style: none;
      outline-style: none;
    }
    &:where(.dark, .dark *) {
      &:not(*:disabled) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--color-white);
          }
        }
      }
    }
    &:where(.dark, .dark *) {
      &:not(*:disabled) {
        &:focus {
          border-color: var(--color-grey-90);
        }
      }
    }
    &:is(.input-with-icon) {
      padding-left: 52px;
    }
  }
  .input-error {
    visibility: hidden;
    display: none;
    align-items: center;
    gap: calc(var(--spacing) * 1.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-error);
    opacity: 0%;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:is(:where(.group\/label):is(.invalid) *) {
      visibility: visible;
    }
    &:is(:where(.group\/label):is(.invalid) *) {
      display: flex;
    }
    &:is(:where(.group\/label):is(.invalid) *) {
      opacity: 100%;
    }
  }
  .label {
    position: relative;
    display: flex;
    cursor: pointer;
    flex-direction: column;
    gap: calc(var(--spacing) * 2);
  }
  .label-text {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-grey-30);
    &:is(:where(.group\/label):is(.invalid) *) {
      color: var(--color-error);
    }
    &:is(:where(.group\/label):is(.valid) *) {
      color: var(--color-green-600);
    }
    &:where(.dark, .dark *) {
      color: var(--color-grey-90);
    }
  }
  .datapicker {
    width: 300px;
    @media (width >= 374px) {
      width: 343px;
    }
  }
  .datapicker-header {
    display: flex;
    max-width: fit-content;
    align-items: center;
    justify-content: space-between;
    gap: calc(var(--spacing) * 2);
  }
  .datapicker-month-btn {
    display: flex;
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
    cursor: pointer;
    align-items: center;
    justify-content: center;
    padding: calc(var(--spacing) * 1);
    & path {
      fill: #231F20;
    }
    &:disabled {
      & path {
        fill: var(--color-grey-60);
      }
    }
    &:where(.dark, .dark *) {
      & path {
        fill: var(--color-white);
      }
    }
  }
  .datapicker-month {
    flex-shrink: 0;
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .datapicker-calendar {
    margin-bottom: calc(var(--spacing) * 2);
    display: grid;
    grid-template-columns: repeat(7, minmax(0, 1fr));
    padding-block: calc(var(--spacing) * 4);
    text-align: center;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-gray-500);
  }
  .datapicker-day-name {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-grey-40);
    text-transform: uppercase;
    &:where(.dark, .dark *) {
      color: var(--color-grey-80);
    }
  }
  .datapicker-days-grid {
    display: grid;
    grid-template-columns: repeat(7, minmax(0, 1fr));
    row-gap: calc(var(--spacing) * 2);
    text-align: center;
    @media (width >= 374px) {
      column-gap: calc(var(--spacing) * 2.5);
    }
  }
  .datapicker-day-num {
    display: flex;
    width: calc(var(--spacing) * 7);
    height: calc(var(--spacing) * 7);
    cursor: pointer;
    align-items: center;
    justify-content: center;
    border-radius: calc(infinity * 1px);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-grey-20);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-95);
      }
    }
    @media (width >= 374px) {
      width: calc(var(--spacing) * 10);
      height: calc(var(--spacing) * 10);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #ddcdfe 10%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary-90) 10%, transparent);
          }
        }
      }
    }
    &:is(.disabled) {
      cursor: not-allowed;
    }
    &:is(.disabled) {
      color: var(--color-grey-60);
    }
    &:is(.disabled) {
      &:hover {
        @media (hover: hover) {
          background-color: transparent;
        }
      }
    }
    &:is(.selected) {
      background-color: var(--color-primary-40);
    }
    &:is(.selected) {
      color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      &:is(.selected) {
        background-color: var(--color-primary-90);
      }
    }
    &:where(.dark, .dark *) {
      &:is(.selected) {
        color: var(--color-primary-20);
      }
    }
  }
  .tabs-header {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-bottom-color: var(--color-grey-70);
    &:where(.dark, .dark *) {
      border-bottom-color: var(--color-grey-50);
    }
  }
  .tab-trigger {
    margin-bottom: -1px;
    animation: var(--animate-fadeIn);
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
    border-bottom-color: transparent;
    padding-top: calc(var(--spacing) * 4);
    padding-bottom: calc(var(--spacing) * 1);
    font-size: 11px;
    color: var(--color-grey-20);
    text-transform: uppercase;
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    @media (width >= 374px) {
      padding-inline: calc(var(--spacing) * 2);
    }
    @media (width >= 374px) {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
    @media (width >= 48rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 3);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    &:is(.active) {
      border-bottom-color: var(--color-primary-40);
    }
    &:is(.active) {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
    &:where(.dark, .dark *) {
      &:is(.active) {
        border-bottom-color: #A68CD9;
      }
    }
  }
  .pagination {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 6);
  }
  .pagination-pages {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 3);
  }
  .pagination-button {
    display: flex;
    width: calc(var(--spacing) * 7);
    height: calc(var(--spacing) * 7);
    cursor: pointer;
    align-items: center;
    justify-content: center;
    border-radius: calc(infinity * 1px);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-grey-20);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-95);
      }
    }
    &:disabled {
      cursor: not-allowed;
    }
    &:disabled {
      color: var(--color-grey-60);
    }
    &:disabled {
      &:hover {
        @media (hover: hover) {
          background-color: transparent;
        }
      }
    }
    @media (width >= 374px) {
      width: calc(var(--spacing) * 10);
      height: calc(var(--spacing) * 10);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #ddcdfe 10%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary-90) 10%, transparent);
          }
        }
      }
    }
    &:is(.active) {
      background-color: var(--color-primary-40);
    }
    &:is(.active) {
      color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      &:is(.active) {
        background-color: var(--color-primary-90);
      }
    }
    &:where(.dark, .dark *) {
      &:is(.active) {
        color: var(--color-primary-20);
      }
    }
  }
  .pagination-arrow {
    &:disabled {
      cursor: not-allowed;
    }
    & path {
      fill: var(--color-grey-30);
    }
    &:disabled {
      & path {
        fill: var(--color-grey-70);
      }
    }
    &:where(.dark, .dark *) {
      & path {
        fill: var(--color-grey-70);
      }
    }
    &:where(.dark, .dark *) {
      &:disabled {
        & path {
          fill: var(--color-grey-30);
        }
      }
    }
  }
}
@layer utilities {
  .with-border {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-grey-70);
    &:where(.dark, .dark *) {
      border-color: var(--color-grey-50);
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
      --tw-leading: initial;
    }
  }
}
